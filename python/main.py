from arithmetic_module import calculate_func
from users import register_user
from stats import calculate_stats
from numbers import filter_even_numbers
from text_analyzer import analyze_file
from shop import make_order

"""
task1
Напишите функцию greet, которая принимает имя в качестве аргумента и выводит строку "Hello, [имя]!".
"""

def greed(name):
    print(f"Hello, {name}!")

greed('Artyom')

"""
task2
Напишите функцию add, которая принимает два числа и возвращает их сумму. 
Вызовите эту функцию с числами 5 и 3.
"""

def add(a, b):
    return a + b

result = add(5, 3)
print(result)

"""
task3
Напишите модуль, содержащий функции для выполнения основных арифметических операций 
(сложение, вычитание, умножение, деление). 
Используйте этот модуль в другом файле для выполнения расчетов с различными числами
"""

result1 = calculate_func(5,3,'-')
result2 = calculate_func(10,8,'+')
result3 = calculate_func(5,4,'*')
result4 = calculate_func(10, 3, '/')
print(result1,result2,result3,result4, sep='\n')

"""
task4
Напишите программу в модуле main.py, которая запрашивает у пользователя имя и возраст, 
используя функцию register_user() из модуля users.py. Если возраст меньше 18, программа должна вывести «Доступ ограничен», 
иначе — «Добро пожаловать, {имя}!». 
Результат работы функции (имя и возраст) не обязательно сохранять в файл,
 но можно вернуть как строку и вывести на экран.
"""

check_access = register_user()
print(check_access)

"""
task5
Создайте программу в модуле main.py, которая с помощью функции calculate_stats(numbers) 
из модуля stats.py принимает от пользователя строку чисел, преобразует её в список, 
находит сумму, максимальное и минимальное значение. Если сумма больше 100, 
выводится сообщение «Большая сумма». 
Работа с файлами в этой задаче не используется, результаты просто выводятся на экран.

"""

stats_of_list = calculate_stats()
print(stats_of_list)

"""
task 7
Напишите программу в модуле main.py, которая вызывает функцию filter_even_numbers(input_file, output_file) 
из модуля numbers.py. Входной файл содержит числа по одному в строке. 
Функция должна считать все числа, отфильтровать только чётные и сохранить их в другой файл, 
а также вернуть количество найденных чётных чисел, которое выводится в консоль.

"""

even_numbers = filter_even_numbers()
print(even_numbers)


"""
task 8
Создайте программу в модуле main.py, которая использует функцию analyze_file(path)
 из модуля text_analyzer.py. Функция считывает содержимое указанного текстового файла, 
 определяет количество строк, количество слов и самое длинное слово, 
 а затем возвращает эти данные в виде строки. Программа выводит результат в консоль 
 и сохраняет его в файл analysis.txt.

"""

analyze_some_str = analyze_file()
print(analyze_some_str)

"""
task6
Реализуйте программу в модуле main.py, которая использует функцию make_order(product, qty) 
из модуля shop.py для оформления заказа. В модуле shop.py хранится словарь с товарами и их ценами. 
Пользователь вводит название товара и количество, функция проверяет, есть ли такой товар, 
и если он найден, считает общую стоимость и возвращает строку с информацией о заказе. 
Если товара нет — возвращается сообщение «Товар не найден». Заказы сохраняются в файл orders.txt.

"""

record_order = make_order('monitor', 7)
print(record_order)